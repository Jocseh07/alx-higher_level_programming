=================================
How to Use 101-lazy_matrix_mul.py
=================================

This module defines a matrix multiplication function ``lazy_matrix_mul``.

Usage
=====

``lazy_matrix_mul`` return multiplication of matrix

::

		>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul
  	>>> lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]]) #doctest: +NORMALIZE_WHITESPACE
		[[13, 16]]

works with floating point numbers

::

  	>>> lazy_matrix_mul([[1.5, 2.5]], [[3.5, 4.5], [5.5, 6.5]]) #doctest: +NORMALIZE_WHITESPACE
		[[19.0, 23.0]]

must provide 2 values

::

		>>> lazy_matrix_mul([[1.5, 2.5]]) #doctest: +NORMALIZE_WHITESPACE
		Traceback (most recent call last):
		TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'	

rows must be same size
::

		>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2, 3], [3, 4]]) #doctest: +NORMALIZE_WHITESPACE
		Traceback (most recent call last):
		TypeError: each row of m_b must be of the same size

rows must be same size
::

		>>> lazy_matrix_mul([[1, 2, 3], [3, 4]], [[1, 2], [3, 4]]) #doctest: +NORMALIZE_WHITESPACE
		Traceback (most recent call last):
		TypeError: each row of m_a must be of the same size

rows must be a list of lists
::

		>>> lazy_matrix_mul([[1, 2], "str"], [[1, 2]]) #doctest: +NORMALIZE_WHITESPACE
		Traceback (most recent call last):
		TypeError: m_a must be a list of lists

rows must be a list of lists of integers and foats
::

		>>> lazy_matrix_mul([[1, 2], ["str"]], [[1, 2]]) #doctest: +NORMALIZE_WHITESPACE
		Traceback (most recent call last):
		TypeError: m_a should contain only integers or floats


for both m_a and m_b
::

		>>> lazy_matrix_mul([[1, 2]], [[1, 2] , ["str"]]) #doctest: +NORMALIZE_WHITESPACE
		Traceback (most recent call last):
		TypeError: m_b should contain only integers or floats